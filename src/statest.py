from scipy.stats import wilcoxon,mannwhitneyu,ranksums

def ranksum(a,b):
    c=[a[i]-b[i] for i in range(len(a))]
    c=[(x,abs(x)) for x in c if x!=0]
    c.sort()
    c=[x for x in c if x!=0]
    c.sort(key=lambda x:x[1], reverse=False) 
    sump=0
    sumn=0
    for i in range(len(c)):
        if c[i][0]>0: 
            sump=sump+i+1
        if c[i][0]<0:
            sumn=sumn+i+1
    print('posRankSum:',sump)
    print('negRankSum:',sumn)
#a=[214, 159, 169, 202, 103, 119, 200, 109, 132, 142, 194, 104, 219, 119, 234]
#b=[159, 135, 141, 101, 102, 168, 62, 167, 174, 159, 66, 118, 181, 171, 112]

#ours auc
def aucwilc():
    a=[1,    0.9354,    0.9161,    0.8765,    0.9519,    0.9703,    0.7498,    0.8579,    0.8943,    0.9194,    0.9463,    0.962,    0.8123,    0.9544,    0.8642,    0.9457,    0.9994,    0.7931,    0.9068,    0.9363,    0.9822,    0.835,    0.9833,    0.9923,    0.6993,    0.9976,    0.8132,    0.8405,    0.7917,    0.9893,    0.8776,    0.9003,    0.8169, ]
    #cart
    b=[0.9939,    0.7903,    0.8524,    0.6558,    0.8650,    0.9568,    0.5312,    0.6034,    0.8009,    0.8853,0.7856,    0.9950,    0.5671,    0.7997,    0.6163,    0.8096,    1.0000,    0.6692,    0.8201,    0.8405,0.9548,    0.6307,    0.8600,    1.0000,    0.5757,    0.8911,    0.6852,    0.6443,    0.6161,    0.8282,0.7896,    0.7164,    0.5213, ]
    #sbo
    b=[0.9739 ,0.9282 ,0.8921 ,0.8794 ,0.9167 ,0.9929 ,0.6901 ,0.7502 ,0.9051 ,0.8461 ,0.8878 ,0.9882 ,0.7342 ,0.8876 ,0.8495 ,0.9253 ,1.0000 ,0.7838 ,0.9090 ,0.9098 ,0.9987 ,0.8098 ,0.9814 ,1.0000 ,0.6584 ,0.9813 ,0.7509 ,0.7357 ,0.7162 ,0.9542 ,0.8363 ,0.8509 ,0.6457 ,]
    #sbag
    b=[0.9940 ,0.9157 ,0.8953 ,0.8609 ,0.9219 ,0.9934 ,0.7005 ,0.7858 ,0.9147 ,0.8968 ,0.9187 ,0.9949 ,0.7776 ,0.9068 ,0.8022 ,0.9431 ,1.0000 ,0.7797 ,0.8733 ,0.9197 ,0.9991 ,0.8044 ,0.9514 ,1.0000 ,0.6122 ,0.8947 ,0.7947 ,0.8165 ,0.7301 ,0.9677 ,0.8318 ,0.8577 ,0.6697 ,]
    #ubag
    b=[0.9920 ,0.9254 ,0.8680 ,0.8567 ,0.9162 ,0.9861 ,0.7869 ,0.7756 ,0.9027 ,0.8962 ,0.8311 ,0.9139 ,0.7695 ,0.8715 ,0.8141 ,0.9311 ,1.0000 ,0.7524 ,0.9399 ,0.9289 ,0.9976 ,0.8039 ,0.9743 ,1.0000 ,0.6552 ,0.9488 ,0.7966 ,0.9174 ,0.7314 ,0.9862 ,0.9206 ,0.8901 ,0.7837 ]
    #brf
    b=[1.0000 ,0.9222 ,0.9320 ,0.8642 ,0.9454 ,0.9795 ,0.7431 ,0.7927 ,0.9295 ,0.9215 ,0.9256 ,1.0000 ,0.7991 ,0.9218 ,0.9413 ,0.9453 ,1.0000 ,0.8214 ,0.9081 ,0.9227 ,0.9992 ,0.7722 ,0.9913 ,1.0000 ,0.7217 ,0.9907 ,0.8097 ,0.8302 ,0.7592 ,0.9812 ,0.9306 ,0.8917 ,0.7728 ,]
    #easy
    #b=[0.9941 ,0.9678 ,0.8659 ,0.8593 ,0.9283 ,0.9449 ,0.7967 ,0.8385 ,0.9113 ,0.9161 ,0.9297 ,0.9470 ,0.8061 ,0.9151 ,0.9365 ,0.9237 ,1.0000 ,0.8047 ,0.9171 ,0.9171 ,0.9711 ,0.8163 ,0.9990 ,1.0000 ,0.6749 ,0.9992 ,0.8104 ,0.8531 ,0.7377 ,0.9502 ,0.9200 ,0.8973 ,0.8137 ]
    #rus
    #b=[0.9900 ,0.9270 ,0.9040 ,0.8246 ,0.9013 ,0.9509 ,0.7179 ,0.7719 ,0.8628 ,0.8963 ,0.9145 ,0.9916 ,0.7042 ,0.8995 ,0.9118 ,0.9705 ,1.0000 ,0.6474 ,0.8968 ,0.9319 ,0.9694 ,0.7278 ,0.9743 ,1.0000 ,0.5497 ,0.9793 ,0.7975 ,0.8295 ,0.6900 ,0.9728 ,0.9249 ,0.8864 ,0.6882 ]
    #eus
    #b=[0.9970 ,0.9219 ,0.9314 ,0.7847 ,0.9268 ,0.9922 ,0.7077 ,0.8230 ,0.8656 ,0.9292 ,0.9226 ,0.9982 ,0.8033 ,0.9051 ,0.8207 ,0.9302 ,1.0000 ,0.7336 ,0.8925 ,0.9236 ,0.9999 ,0.7177 ,0.9668 ,1.0000 ,0.5622 ,0.9865 ,0.7383 ,0.8289 ,0.7259 ,0.9831 ,0.8087 ,0.8622 ,0.6987 ]
    #usend
    #b=[0.9940 ,0.8791 ,0.8685 ,0.8064 ,0.8692 ,0.9622 ,0.6356 ,0.7531 ,0.8872 ,0.8887 ,0.9116 ,0.9782 ,0.7538 ,0.9041 ,0.8840 ,0.9096 ,1.0000 ,0.7782 ,0.9001 ,0.9141 ,0.9814 ,0.7189 ,0.9314 ,1.0000 ,0.5255 ,0.9734 ,0.7624 ,0.7977 ,0.7020 ,0.9569 ,0.7939 ,0.8702 ,0.6935 ]
    w,p=wilcoxon(a, b,alternative='greater')
    w1,p1=wilcoxon(a, b,alternative='less')
    w2,p2=wilcoxon(a, b,alternative='two-sided')
    print(w,'\n',p)
    print(w1,'\n',p1)
    print(w2,'\n',p2)
    ranksum(a, b)
    
def f1wilc():
    a=[0.7247 ,0.7601 ,0.6955 ,0.5106 ,0.6393 ,0.6532 ,0.1800 ,0.3267 ,0.6084 ,0.5622 ,0.7357 ,0.5943 ,0.2306 ,0.6966 ,0.5006 ,0.7521 ,0.8421 ,0.2583 ,0.6151 ,0.6517 ,0.7692 ,0.3945 ,0.6629 ,0.8444 ,0.0529 ,0.7267 ,0.6650 ,0.3160 ,0.1627 ,0.6488 ,0.5429 ,0.4378 ,0.0614 ]
    #cart
    b=[0.9600 ,0.6173 ,0.7072 ,0.3670 ,0.7674 ,0.9047 ,0.1222 ,0.2379 ,0.6385 ,0.7652 ,0.5974 ,0.9600 ,0.1876 ,0.6438 ,0.2560 ,0.6238 ,1.0000 ,0.3705 ,0.5981 ,0.7040 ,0.8923 ,0.2949 ,0.6200 ,1.0000 ,0.1591 ,0.6992 ,0.3878 ,0.2899 ,0.2197 ,0.6355 ,0.4248 ,0.4278 ,0.0516 ]
    #sbo
    #b=0.9378 ,0.7649 ,0.7301 ,0.5033 ,0.7128 ,0.8311 ,0.2979 ,0.2893 ,0.6942 ,0.7056 ,0.7982 ,0.7911 ,0.2737 ,0.7331 ,0.7417 ,0.7232 ,1.0000 ,0.3107 ,0.6001 ,0.7499 ,0.9445 ,0.2784 ,0.6511 ,0.9055 ,0.1460 ,0.6362 ,0.2448 ,0.2837 ,0.1298 ,0.5612 ,0.2414 ,0.3099 ,0.0362 
    #sbag
    b=[0.9156 ,0.7897 ,0.7362 ,0.5038 ,0.8016 ,0.9090 ,0.3173 ,0.1587 ,0.7489 ,0.7682 ,0.6942 ,0.7956 ,0.2569 ,0.8106 ,0.7007 ,0.7466 ,1.0000 ,0.2676 ,0.5917 ,0.7570 ,0.9751 ,0.3904 ,0.5995 ,0.9277 ,0.0418 ,0.6443 ,0.6196 ,0.3232 ,0.0532 ,0.7221 ,0.2338 ,0.5561 ,0.0190 ]
    #ubag
    b=[0.8622 ,0.6785 ,0.6634 ,0.4984 ,0.6873 ,0.8577 ,0.2148 ,0.2738 ,0.6729 ,0.6221 ,0.6900 ,0.8178 ,0.3005 ,0.6690 ,0.5170 ,0.7117 ,1.0000 ,0.2626 ,0.5432 ,0.6504 ,0.8912 ,0.2851 ,0.5113 ,0.9111 ,0.1751 ,0.4578 ,0.3804 ,0.2673 ,0.1641 ,0.6213 ,0.2296 ,0.3279 ,0.0487 ]
    #brf
    b=[0.8756 ,0.7599 ,0.6112 ,0.4398 ,0.5315 ,0.7469 ,0.2603 ,0.2631 ,0.5586 ,0.5484 ,0.7719 ,0.5506 ,0.2710 ,0.5458 ,0.5042 ,0.7504 ,1.0000 ,0.2849 ,0.5292 ,0.6102 ,0.5458 ,0.2445 ,0.3742 ,0.9778 ,0.1593 ,0.3363 ,0.2402 ,0.2519 ,0.1470 ,0.4714 ,0.2521 ,0.2909 ,0.0281 ]
    #easy
    b=[0.8603 ,0.6740 ,0.5861 ,0.4169 ,0.5764 ,0.8614 ,0.3122 ,0.3210 ,0.4919 ,0.5047 ,0.6200 ,0.7571 ,0.3177 ,0.5585 ,0.5003 ,0.6472 ,1.0000 ,0.2745 ,0.4450 ,0.6115 ,0.7869 ,0.2654 ,0.4423 ,0.9778 ,0.1119 ,0.4057 ,0.2473 ,0.2319 ,0.1321 ,0.4785 ,0.1967 ,0.2383 ,0.0392 ]
    #rus
    b=[0.9111 ,0.7721 ,0.6946 ,0.3554 ,0.7079 ,0.9078 ,0.2388 ,0.3256 ,0.6181 ,0.5117 ,0.7632 ,0.9178 ,0.2873 ,0.6901 ,0.4692 ,0.7266 ,1.0000 ,0.2139 ,0.6067 ,0.7634 ,0.9377 ,0.2608 ,0.5047 ,0.9778 ,0.0899 ,0.6548 ,0.2401 ,0.2238 ,0.0764 ,0.6354 ,0.2489 ,0.3062 ,0.0430 ]
    #eus
    b=[0.9167 ,0.7794 ,0.6669 ,0.2950 ,0.7032 ,0.8808 ,0.1944 ,0.3157 ,0.5343 ,0.5196 ,0.7897 ,0.8762 ,0.2952 ,0.6309 ,0.3794 ,0.7884 ,1.0000 ,0.1916 ,0.5945 ,0.8017 ,0.9250 ,0.2457 ,0.6418 ,0.9778 ,0.0761 ,0.6448 ,0.2135 ,0.1789 ,0.0646 ,0.5932 ,0.3271 ,0.3279 ,0.0451 ]
    #usend
    b=[0.9511 ,0.7222 ,0.6979 ,0.4845 ,0.7294 ,0.9471 ,0.2615 ,0.2330 ,0.6951 ,0.7765 ,0.6468 ,0.9378 ,0.3029 ,0.7152 ,0.3848 ,0.6372 ,1.0000 ,0.3447 ,0.6083 ,0.7502 ,0.9181 ,0.3342 ,0.7892 ,0.9778 ,0.0415 ,0.6956 ,0.4649 ,0.3795 ,0.2513 ,0.6347 ,0.4756 ,0.4308 ,0.0610 ]
    w,p=wilcoxon(a, b,alternative='greater')
    w1,p1=wilcoxon(a, b,alternative='less')
    w2,p2=wilcoxon(a, b,alternative='two-sided')
    print(w,'\n',p)
    print(w1,'\n',p1)
    print(w2,'\n',p2)
    ranksum(a, b)
    
def gmeanwilc():
    a=[0.9540 ,0.9110 ,0.8745 ,0.7762 ,0.8766 ,0.9065 ,0.2904 ,0.6250 ,0.8651 ,0.8912 ,0.9270 ,0.9041 ,0.4029 ,0.8838 ,0.6527 ,0.8993 ,0.9769 ,0.6835 ,0.9364 ,0.9185 ,0.9307 ,0.6096 ,0.9203 ,0.8556 ,0.4051 ,0.9298 ,0.7251 ,0.6491 ,0.4848 ,0.9574 ,0.9237 ,0.8326 ,0.7621 ]
    #cart
    b=[0.9939 ,0.7473 ,0.8424 ,0.5809 ,0.8485 ,0.9556 ,0.2091 ,0.4272 ,0.7762 ,0.8869 ,0.7218 ,0.9949 ,0.3075 ,0.7758 ,0.3737 ,0.7828 ,1.0000 ,0.5974 ,0.7627 ,0.8155 ,0.9504 ,0.5084 ,0.8110 ,1.0000 ,0.3747 ,0.8474 ,0.5892 ,0.5390 ,0.4343 ,0.8071 ,0.6194 ,0.6436 ,0.1297 ]
    #sbo
    b=[0.9919 ,0.8751 ,0.8811 ,0.7833 ,0.8820 ,0.9407 ,0.6908 ,0.6834 ,0.8456 ,0.8848 ,0.9203 ,0.9162 ,0.6210 ,0.8788 ,0.8822 ,0.8893 ,1.0000 ,0.7037 ,0.8573 ,0.9004 ,0.9905 ,0.7298 ,0.8502 ,1.0000 ,0.6037 ,0.8149 ,0.6496 ,0.7501 ,0.6358 ,0.9367 ,0.6696 ,0.8552 ,0.7087 ]
    #sbag
    b=[0.9898 ,0.8442 ,0.8292 ,0.6778 ,0.8710 ,0.9648 ,0.4482 ,0.2573 ,0.8417 ,0.8910 ,0.7794 ,0.8501 ,0.3424 ,0.8680 ,0.8233 ,0.8303 ,1.0000 ,0.4411 ,0.8837 ,0.8503 ,0.9981 ,0.6082 ,0.8186 ,1.0000 ,0.0808 ,0.8864 ,0.6804 ,0.4920 ,0.1079 ,0.8493 ,0.7265 ,0.7000 ,0.7217 ]
    #ubag
    b=[0.9794 ,0.8758 ,0.8438 ,0.7796 ,0.8601 ,0.9734 ,0.4835 ,0.6078 ,0.8654 ,0.8739 ,0.8656 ,0.9609 ,0.6426 ,0.8614 ,0.7422 ,0.8942 ,1.0000 ,0.6538 ,0.8819 ,0.8966 ,0.9917 ,0.6466 ,0.9353 ,0.9138 ,0.6323 ,0.9365 ,0.7553 ,0.7872 ,0.6588 ,0.9556 ,0.7669 ,0.8728 ,0.7226 ]
    #brf
    b=[0.9715 ,0.9349 ,0.8704 ,0.7891 ,0.8394 ,0.9413 ,0.6533 ,0.7136 ,0.8700 ,0.8911 ,0.9326 ,0.9168 ,0.7058 ,0.8808 ,0.8326 ,0.9251 ,1.0000 ,0.7394 ,0.9027 ,0.9159 ,0.9210 ,0.7160 ,0.9010 ,1.0000 ,0.6911 ,0.9009 ,0.7405 ,0.8195 ,0.7052 ,0.9471 ,0.8773 ,0.8610 ,0.6782 ]
    #easy
    b=[0.9771 ,0.8927 ,0.8550 ,0.7745 ,0.8488 ,0.9784 ,0.7042 ,0.7583 ,0.8214 ,0.8620 ,0.8935 ,0.9538 ,0.7462 ,0.8815 ,0.8128 ,0.9020 ,1.0000 ,0.7527 ,0.8800 ,0.9096 ,0.9826 ,0.7534 ,0.9208 ,1.0000 ,0.5652 ,0.9317 ,0.7706 ,0.8007 ,0.7067 ,0.9518 ,0.7996 ,0.8634 ,0.7424 ]
    #rus
    b=[0.9877 ,0.8515 ,0.8315 ,0.6226 ,0.8584 ,0.9594 ,0.4983 ,0.5720 ,0.8196 ,0.8699 ,0.8585 ,0.9725 ,0.4774 ,0.8199 ,0.6320 ,0.8616 ,1.0000 ,0.5304 ,0.8815 ,0.8616 ,0.9792 ,0.6221 ,0.8036 ,1.0000 ,0.3924 ,0.9666 ,0.6077 ,0.6676 ,0.3894 ,0.9105 ,0.6415 ,0.8119 ,0.5261 ]
    #eus
    b=[0.9701 ,0.8756 ,0.8292 ,0.6062 ,0.8230 ,0.9501 ,0.3603 ,0.5798 ,0.7835 ,0.8441 ,0.8910 ,0.9557 ,0.5868 ,0.8033 ,0.5824 ,0.8900 ,1.0000 ,0.4984 ,0.8152 ,0.9111 ,0.9827 ,0.6082 ,0.8605 ,1.0000 ,0.3822 ,0.9706 ,0.5760 ,0.6326 ,0.3427 ,0.9025 ,0.6954 ,0.8178 ,0.5490 ]
    #usend
    b=[0.9939 ,0.8339 ,0.8096 ,0.6508 ,0.7877 ,0.9656 ,0.3886 ,0.3199 ,0.8043 ,0.8780 ,0.7681 ,0.9754 ,0.4307 ,0.8561 ,0.5314 ,0.7664 ,1.0000 ,0.4701 ,0.8803 ,0.8504 ,0.9936 ,0.5146 ,0.8949 ,0.9805 ,0.0808 ,0.7473 ,0.5507 ,0.5675 ,0.3768 ,0.8517 ,0.6031 ,0.6230 ,0.1179 ]

    w,p=wilcoxon(a, b,alternative='greater')
    w1,p1=wilcoxon(a, b,alternative='less')
    w2,p2=wilcoxon(a, b,alternative='two-sided')
    print(w,'\n',p)
    print(w1,'\n',p1)
    print(w2,'\n',p2)
    ranksum(a, b)
def edmdcd():
    #auc ed
    #a=[1.0000 ,0.9727 ,0.9161 ,0.8765 ,0.9519 ,0.9703 ,0.7498 ,0.8579 ,0.8943 ,0.9194 ,0.9463 ,0.9620 ,0.8123 ,0.9544 ,0.8642 ,0.9457 ,0.9994 ,0.7931 ,0.9068 ,0.9363 ,0.9822 ,0.8350 ,0.9833 ,0.9923 ,0.6993 ,0.9976 ,0.8132 ,0.8405 ,0.7917 ,0.9893 ,0.8776 ,0.9003 ,0.8169 ]
    #md
    #b=[1.0000 ,0.9657 ,0.9264 ,0.8728 ,0.9613 ,0.9648 ,0.7096 ,0.8142 ,0.8849 ,0.9153 ,0.9508 ,0.9563 ,0.8347 ,0.9524 ,0.8748 ,0.9438 ,0.9961 ,0.8003 ,0.8863 ,0.9263 ,0.9719 ,0.8415 ,0.9843 ,0.9893 ,0.6800 ,0.9801 ,0.8298 ,0.8364 ,0.8048 ,0.9868 ,0.8948 ,0.9029 ,0.8034 ]
    #cd
    #b=[0.9761 ,0.8851 ,0.7742 ,0.7693 ,0.8559 ,0.9054 ,0.6963 ,0.8517 ,0.7980 ,0.8518 ,0.8556 ,0.9023 ,0.8200 ,0.8799 ,0.8104 ,0.8638 ,1.0006 ,0.7103 ,0.8397 ,0.8665 ,0.9758 ,0.7072 ,0.9528 ,0.9975 ,0.5533 ,0.9635 ,0.7549 ,0.6827 ,0.7586 ,0.9488 ,0.7273 ,0.8547 ,0.7578 ]
    
    #f1
    #a=[0.7247 ,0.7601 ,0.6955 ,0.5106 ,0.6393 ,0.6532 ,0.1800 ,0.3267 ,0.6084 ,0.5622 ,0.7357 ,0.5943 ,0.2306 ,0.6966 ,0.5006 ,0.7521 ,0.8421 ,0.2583 ,0.6151 ,0.6517 ,0.7692 ,0.3945 ,0.6629 ,0.8444 ,0.0529 ,0.7267 ,0.6650 ,0.3160 ,0.1627 ,0.6488 ,0.5429 ,0.4378 ,0.0614 ]
    #b=[0.6536 ,0.7418 ,0.7820 ,0.5141 ,0.6825 ,0.6562 ,0.1525 ,0.2611 ,0.5924 ,0.5493 ,0.7194 ,0.5862 ,0.2121 ,0.6975 ,0.5727 ,0.7656 ,0.8183 ,0.1957 ,0.5810 ,0.6436 ,0.7381 ,0.3832 ,0.7172 ,0.8333 ,0.0433 ,0.7207 ,0.6740 ,0.3149 ,0.1391 ,0.6411 ,0.6392 ,0.3885 ,0.0614 ]
    #b=[0.6450 ,0.7153 ,0.6790 ,0.3732 ,0.6821 ,0.5191 ,0.2246 ,0.3484 ,0.4694 ,0.4568 ,0.4739 ,0.4494 ,0.1714 ,0.3928 ,0.5081 ,0.7177 ,0.9330 ,0.0598 ,0.4502 ,0.6271 ,0.8999 ,0.1886 ,0.5170 ,0.8377 ,0.0228 ,0.5132 ,0.3066 ,0.2379 ,0.0290 ,0.4690 ,0.4559 ,0.1811 ,0.0614 ]
    
    a=[0.9540 ,0.9110 ,0.8745 ,0.7762 ,0.8766 ,0.9065 ,0.2904 ,0.6250 ,0.8651 ,0.8912 ,0.9270 ,0.9041 ,0.4029 ,0.8838 ,0.6527 ,0.8993 ,0.9769 ,0.6835 ,0.9364 ,0.9185 ,0.9307 ,0.6096 ,0.9203 ,0.8556 ,0.4051 ,0.9298 ,0.7251 ,0.6491 ,0.4848 ,0.9574 ,0.8237 ,0.8326 ,0.7621 ]
    b=[0.9382 ,0.9267 ,0.9557 ,0.7780 ,0.8880 ,0.8959 ,0.2356 ,0.5175 ,0.8573 ,0.8769 ,0.9230 ,0.8894 ,0.3393 ,0.8993 ,0.7406 ,0.9249 ,0.9656 ,0.5473 ,0.8945 ,0.9021 ,0.9228 ,0.5766 ,0.9788 ,0.7664 ,0.4350 ,0.8676 ,0.7315 ,0.6242 ,0.4311 ,0.9303 ,0.8578 ,0.7884 ,0.7621 ]
    b=[0.9417 ,0.8670 ,0.8078 ,0.6468 ,0.7862 ,0.7902 ,0.4039 ,0.7345 ,0.7003 ,0.7151 ,0.6302 ,0.6932 ,0.2874 ,0.4970 ,0.6792 ,0.8236 ,0.9927 ,0.3860 ,0.7194 ,0.7855 ,0.9544 ,0.3096 ,0.8133 ,0.8888 ,0.3318 ,0.6578 ,0.3666 ,0.6155 ,0.3199 ,0.7350 ,0.7557 ,0.5404 ,0.7621 ]
    
    w,p=wilcoxon(a, b,alternative='greater')
    w1,p1=wilcoxon(a, b,alternative='less')
    w2,p2=wilcoxon(a, b,alternative='two-sided')
    print(w,'\n',p)
    print(w1,'\n',p1)
    print(w2,'\n',p2)
    ranksum(a, b)
if __name__=='__main__':
    #gmeanwilc()
    #aucwilc()
    #f1wilc()
    edmdcd()